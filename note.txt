Pour compiler un fichier utilisant la mlx:

gcc -I /usr/include -g -L /usr/lib -l mlx -framework OpenGL -framework AppKit

suivi du nom du .c a compiler











void	my_mlx_pixel_put(t_data *data, int x, int y, int color)
{
	char	*dst;

	dst = data->addr + (y * data->line_length + x * (data->bits_per_pixel / 8));
	*(unsigned int*)dst = color;
}

Ì‰/*
pour changer un pixel, il suffit de modifier les char 0, 1 et 2 (le 3 etant l'opacite on y touche pas)
du dit pixel dans dst.
Exemple:
si on veut changer le pixel (0,2) dans une image en 800 par 600:
la valeur de rouge sera set a dst[4 * 800 * 2 (X position * 4 + 4 * Line size * Y position)]
la valeur de vert sera set a dst[(4 * 800 * 2) + 1]
la valeur de bleu sera set a dst[(4 * 800 * 2) + 2]
*/

void	display(t_list config, char **map)
{
	void	*mlx;
	void	*mlx_win;
	t_data	img;

	mlx = mlx_init();
	mlx_win = mlx_new_window(mlx, 800, 600, "Raycaster");
	img.img = mlx_new_image(mlx, 800, 600);
	img.addr = mlx_get_data_addr(img.img, &img.bits_per_pixel, &img.line_length,
								&img.endian);
	my_mlx_pixel_put(&img, config.line_nbr, config.column_nbr, 0x0000FF00);
	mlx_put_image_to_window(mlx, mlx_win, img.img, 0, 0);
	mlx_loop(mlx);
}